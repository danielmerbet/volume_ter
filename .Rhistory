Qout_sqd[1,m] <- inflow_for_sqd[1,(1+m)]
change_Q_sqd[1,m] <- inflow_for_sqd[1,(1+m)] - Qout_sqd[1,m] #should be 0
change_V_sqd[1,m] <- change_Q_sqd[1,m]*(86400/1e6)
V_total_temp <- (V_ini_sqd+change_V_sqd[1,m])
}
V_total_temp_vector <- V_total_temp
for (d in 2:nrow(inflow_for_sqd)){
V_total_temp <- (V_total_temp+change_V_sqd[d,m])
#assume Qin=Qout when volumen is lower than 5% or greater than 95%
if (V_total_temp<(unique(sqd_balance$Vmax)*0.05)){
V_total_temp <- (V_total_temp-change_V_sqd[d,m])
print(paste0("d: ", d, "m: ", m))
Qout_sqd[d,m] <- inflow_for_sqd[d,(1+m)]
print(paste0("Qin: ", inflow_for_sqd[d,(1+m)]))
print(paste0("Qout: ", Qout_sqd[d,m]))
change_Q_sqd[d,m] <- inflow_for_sqd[d,(1+m)] - Qout_sqd[d,m] #should be 0
print(change_Q_sqd[d,m])
change_V_sqd[d,m] <- change_Q_sqd[d,m]*(86400/1e6)
}
if (V_total_temp>(unique(sqd_balance$Vmax)*0.95)){
V_total_temp <- (V_total_temp-change_V_sqd[d,m])
Qout_sqd[1,m] <- inflow_for_sqd[d,(1+m)]
change_Q_sqd[1,m] <- inflow_for_sqd[d,(1+m)] - Qout_sqd[d,m] #should be 0
change_V_sqd[1,m] <- change_Q_sqd[d,m]*(86400/1e6)
}
V_total_temp_vector <- c(V_total_temp_vector, V_total_temp)
}
V_total_sqd[,m] <- V_total_temp_vector
}
pdf("plot/3_forecast_sqd.pdf")
#plot corrected volumes
plot(as.Date(inflow_for_sqd$date), V_total_sqd[,1], type="l",
ylim=c(0,unique(sqd_balance$Vmax)),  ylab="Volume SQD (hm³)", xlab="Date")
for (i in 2:51){
lines(as.Date(inflow_for_sqd$date), V_total_sqd[,i])
}
#ensemble mean
lines(as.Date(inflow_for_sqd$date), rowMeans(V_total_sqd), col="red", lwd=3)
#real dynamic previous year
dates_plot <- seq(as.Date("2023-10-01"), as.Date("2024-04-30"), by=1)
sel_pos <- sqd_balance$date %in% dates_plot
#plot(sqd_balance$date[sel_pos],sqd_balance$V[sel_pos], type="l")
lines(as.Date(inflow_for_sqd$date),sqd_balance$V[sel_pos][1:length(inflow_for_sqd$date)],
col="blue", lwd=3)
lines(as.Date(sqd_balance_actual$date, format = "%m/%d/%Y"),sqd_balance_actual$V,
col="green", lwd=3)
legend("topleft", legend=c("Ensemble", "Last season", "51 members", "Actual season"),
col=c("red","blue", "black","green"), lty=1, cex=0.8, bty="n")
dev.off()
png("plot/3_forecast_sqd.png", width = 800, height = 600, units = "px")
#plot corrected volumes
plot(as.Date(inflow_for_sqd$date), V_total_sqd[,1], type="l",
ylim=c(0,unique(sqd_balance$Vmax)),  ylab="Volume SQD (hm³)", xlab="Date")
for (i in 2:51){
lines(as.Date(inflow_for_sqd$date), V_total_sqd[,i])
}
#ensemble mean
lines(as.Date(inflow_for_sqd$date), rowMeans(V_total_sqd), col="red", lwd=3)
#real dynamic previous year
dates_plot <- seq(as.Date("2023-10-01"), as.Date("2024-04-30"), by=1)
sel_pos <- sqd_balance$date %in% dates_plot
#plot(sqd_balance$date[sel_pos],sqd_balance$V[sel_pos], type="l")
lines(as.Date(inflow_for_sqd$date),sqd_balance$V[sel_pos][1:length(inflow_for_sqd$date)],
col="blue", lwd=3)
lines(as.Date(sqd_balance_actual$date, format = "%m/%d/%Y"),sqd_balance_actual$V,
col="green", lwd=3)
legend("topleft", legend=c("Ensemble", "Last season", "51 members", "Actual season"),
col=c("red","blue", "black","green"), lty=1, cex=0.8, bty="n")
dev.off()
#save results forecast
write.csv(data.frame(date=inflow_for_sqd$date,change_Q_sqd),
file="out/forecast_sqd/for_change_Q_sqd.csv",
quote = F,row.names = F)
write.csv(data.frame(date=inflow_for_sqd$date,change_V_sqd),
file="out/forecast_sqd/for_change_V_sqd.csv",
quote = F,row.names = F)
write.csv(data.frame(date=inflow_for_sqd$date,Qout_sqd),
file="out/forecast_sqd/for_Qout_sqd.csv",
quote = F,row.names = F)
write.csv(data.frame(date=inflow_for_sqd$date, V_total_sqd),
file="out/forecast_sqd/for_V_sqd.csv",
quote = F,row.names = F)
dir <- "/home/dmercado/Documents/intoDBP/volume_ter/"
setwd(dir)
V_sqd <- read.csv("out/forecast_sqd/for_V_sqd.csv")
#load sau and sqd balances
V_sau <- read.csv("out/forecast_sau/for_V_sau.csv")
V_sqd <- read.csv("out/forecast_sqd/for_V_sqd.csv")
dir <- "/home/dmercado/Documents/intoDBP/volume_ter/"
setwd(dir)
#load sau and sqd balances
V_sau <- read.csv("out/forecast_sau/for_V_sau.csv")
V_sqd <- read.csv("out/forecast_sqd/for_V_sqd.csv")
View(V_sau)
dir <- "/home/dmercado/Documents/intoDBP/volume_ter/"
setwd(dir)
#load sau and sqd volumes
V_sau <- read.csv("out/forecast_sau/for_V_sau.csv")
V_sqd <- read.csv("out/forecast_sqd/for_V_sqd.csv")
V_sau + V_sqd
V_sau[2:ncol(V_sau)] + V_sqd[2:ncol(V_sqd)]
V_total <- V_sau[2:ncol(V_sau)] + V_sqd[2:ncol(V_sqd)]
#plot corrected volumes
plot(as.Date(V_sau$date), V_total[,1], type="l",
ylim=c(0,unique(sqd_balance$Vmax)),  ylab="Volume SQD (hm³)", xlab="Date")
dir <- "/home/dmercado/Documents/intoDBP/volume_ter/"
setwd(dir)
#load sau and sqd volumes
V_sau <- read.csv("out/forecast_sau/for_V_sau.csv")
V_sqd <- read.csv("out/forecast_sqd/for_V_sqd.csv")
V_total <- V_sau[2:ncol(V_sau)] + V_sqd[2:ncol(V_sqd)]
#load sau and sqd balances
sqd_balance <- read.csv("out/calculated_sqd.csv")
sau_balance <- read.csv("out/calculated_sau.csv")
#current balance for the actual dates
sqd_balance_actual <- read.csv("in/water_balance_sqd_actual.csv")
sau_balance_actual <- read.csv("in/water_balance_sau_actual.csv")
#plot corrected volumes
plot(as.Date(V_sau$date), V_total[,1], type="l",
ylim=c(0,unique(sqd_balance$Vmax)),  ylab="Volume SQD (hm³)", xlab="Date")
#plot corrected volumes
plot(as.Date(V_sau$date), V_total[,1], type="l",
ylim=c(0,unique(sqd_balance$Vmax)),  ylab="Volume SQD (hm³)", xlab="Date")
for (i in 2:51){
lines(as.Date(V_sau$date), V_total[,i])
}
sqd_balance$Vmax
sqd_balance$Vmax+sau_balance$Vmax
#plot corrected volumes
plot(as.Date(V_sau$date), V_total[,1], type="l",
ylim=c(0,unique(sqd_balance$Vmax+sau_balance$Vmax)),  ylab="Volume SQD (hm³)", xlab="Date")
for (i in 2:51){
lines(as.Date(V_sau$date), V_total[,i])
}
#ensemble mean
lines(as.Date(V_sau$date), rowMeans(V_total), col="red", lwd=3)
#real dynamic previous year
dates_plot <- seq(as.Date("2023-10-01"), as.Date("2024-04-30"), by=1)
sel_pos <- sqd_balance$date %in% dates_plot
which(sel_pos)
sel_pos <- as.Date(sqd_balance$date) %in% dates_plot
which(sel_pos)
ter_balance_V <- sqd_balance$V + sau_balance$V
#plot corrected volumes
plot(as.Date(V_sau$date), V_total[,1], type="l",
ylim=c(0,unique(sqd_balance$Vmax+sau_balance$Vmax)),  ylab="Volume SQD (hm³)", xlab="Date")
for (i in 2:51){
lines(as.Date(V_sau$date), V_total[,i])
}
#ensemble mean
lines(as.Date(V_sau$date), rowMeans(V_total), col="red", lwd=3)
#real dynamic previous year
dates_plot <- seq(as.Date("2023-10-01"), as.Date("2024-04-30"), by=1)
sel_pos <- as.Date(sqd_balance$date) %in% dates_plot
#plot(sqd_balance$date[sel_pos],sqd_balance$V[sel_pos], type="l")
lines(as.Date(V_sau$date),ter_balance_V[sel_pos][1:length(V_sau$date)],
col="blue", lwd=3)
ter_balance_actual_V <- sqd_balance_actual$V+sau_balance_actual$V
lines(as.Date(sqd_balance_actual$date, format = "%m/%d/%Y"),ter_balance_actual_V,
col="green", lwd=3)
legend("topleft", legend=c("Ensemble", "Last season", "51 members", "Actual season"),
col=c("red","blue", "black","green"), lty=1, cex=0.8, bty="n")
#plot corrected volumes
plot(as.Date(V_sau$date), V_total[,1], type="l",
ylim=c(0,unique(sqd_balance$Vmax+sau_balance$Vmax)),  ylab="Volume SQD (hm³)", xlab="Date")
#plot corrected volumes
plot(as.Date(V_sau$date), V_total[,1], type="l",
ylim=c(0,unique(sqd_balance$Vmax+sau_balance$Vmax)),  ylab="Volume SQD (hm³)", xlab="Date")
for (i in 2:51){
lines(as.Date(V_sau$date), V_total[,i])
}
#ensemble mean
lines(as.Date(V_sau$date), rowMeans(V_total), col="red", lwd=3)
#real dynamic previous year
dates_plot <- seq(as.Date("2023-10-01"), as.Date("2024-04-30"), by=1)
sel_pos <- as.Date(sqd_balance$date) %in% dates_plot
#plot(sqd_balance$date[sel_pos],sqd_balance$V[sel_pos], type="l")
lines(as.Date(V_sau$date),ter_balance_V[sel_pos][1:length(V_sau$date)],
col="blue", lwd=3)
lines(as.Date(V_sau$date, format = "%m/%d/%Y"),sqd_balance_actual$V,
col="green", lwd=3)
lines(as.Date(V_sau$date, format = "%m/%d/%Y"),ter_balance_actual_V,
col="green", lwd=3)
lines(as.Date(sau_balance_actual$date, format = "%m/%d/%Y"),ter_balance_actual_V,
col="green", lwd=3)
legend("topleft", legend=c("Ensemble", "Last season", "51 members", "Actual season"),
col=c("red","blue", "black","green"), lty=1, cex=0.8, bty="n")
#plot corrected volumes
plot(as.Date(V_sau$date), V_total[,1], type="l",
ylim=c(0,unique(sqd_balance$Vmax+sau_balance$Vmax)),  ylab="Volume SQD (hm³)", xlab="Date")
for (i in 2:51){
lines(as.Date(V_sau$date), V_total[,i])
}
#ensemble mean
lines(as.Date(V_sau$date), rowMeans(V_total), col="red", lwd=3)
#real dynamic previous year
dates_plot <- seq(as.Date("2023-10-01"), as.Date("2024-04-30"), by=1)
sel_pos <- as.Date(sqd_balance$date) %in% dates_plot
#plot(sqd_balance$date[sel_pos],sqd_balance$V[sel_pos], type="l")
lines(as.Date(V_sau$date),ter_balance_V[sel_pos][1:length(V_sau$date)],
col="blue", lwd=3)
lines(as.Date(sau_balance_actual$date, format = "%m/%d/%Y"),ter_balance_actual_V,
col="green", lwd=3)
legend("topleft", legend=c("Ensemble", "Last season", "51 members", "Actual season"),
col=c("red","blue", "black","green"), lty=1, cex=0.8, bty="n")
dir <- "/home/dmercado/Documents/intoDBP/volume_ter/"
setwd(dir)
#load sau and sqd volumes
V_sau <- read.csv("out/forecast_sau/for_V_sau.csv")
V_sqd <- read.csv("out/forecast_sqd/for_V_sqd.csv")
V_total <- V_sau[2:ncol(V_sau)] + V_sqd[2:ncol(V_sqd)]
#load sau and sqd balances
sqd_balance <- read.csv("out/calculated_sqd.csv")
sau_balance <- read.csv("out/calculated_sau.csv")
ter_balance_V <- sqd_balance$V + sau_balance$V
#current balance for the actual dates
sqd_balance_actual <- read.csv("in/water_balance_sqd_actual.csv")
sau_balance_actual <- read.csv("in/water_balance_sau_actual.csv")
ter_balance_actual_V <- sqd_balance_actual$V+sau_balance_actual$V
pdf("plot/3_forecast_ter.pdf")
#plot corrected volumes
plot(as.Date(V_sau$date), V_total[,1], type="l",
ylim=c(0,unique(sqd_balance$Vmax+sau_balance$Vmax)),  ylab="Volume SQD (hm³)", xlab="Date")
for (i in 2:51){
lines(as.Date(V_sau$date), V_total[,i])
}
#ensemble mean
lines(as.Date(V_sau$date), rowMeans(V_total), col="red", lwd=3)
#real dynamic previous year
dates_plot <- seq(as.Date("2023-10-01"), as.Date("2024-04-30"), by=1)
sel_pos <- as.Date(sqd_balance$date) %in% dates_plot
#plot(sqd_balance$date[sel_pos],sqd_balance$V[sel_pos], type="l")
lines(as.Date(V_sau$date),ter_balance_V[sel_pos][1:length(V_sau$date)],
col="blue", lwd=3)
lines(as.Date(sau_balance_actual$date, format = "%m/%d/%Y"),ter_balance_actual_V,
col="green", lwd=3)
legend("topleft", legend=c("Ensemble", "Last season", "51 members", "Actual season"),
col=c("red","blue", "black","green"), lty=1, cex=0.8, bty="n")
dev.off()
png("plot/3_forecast_ter.png", width = 800, height = 600, units = "px")
#plot corrected volumes
plot(as.Date(V_sau$date), V_total[,1], type="l",
ylim=c(0,unique(sqd_balance$Vmax+sau_balance$Vmax)),  ylab="Volume SQD (hm³)", xlab="Date")
for (i in 2:51){
lines(as.Date(V_sau$date), V_total[,i])
}
#ensemble mean
lines(as.Date(V_sau$date), rowMeans(V_total), col="red", lwd=3)
#real dynamic previous year
dates_plot <- seq(as.Date("2023-10-01"), as.Date("2024-04-30"), by=1)
sel_pos <- as.Date(sqd_balance$date) %in% dates_plot
#plot(sqd_balance$date[sel_pos],sqd_balance$V[sel_pos], type="l")
lines(as.Date(V_sau$date),ter_balance_V[sel_pos][1:length(V_sau$date)],
col="blue", lwd=3)
lines(as.Date(sau_balance_actual$date, format = "%m/%d/%Y"),ter_balance_actual_V,
col="green", lwd=3)
legend("topleft", legend=c("Ensemble", "Last season", "51 members", "Actual season"),
col=c("red","blue", "black","green"), lty=1, cex=0.8, bty="n")
dev.off()
dir <- "/home/dmercado/Documents/intoDBP/volume_ter/"
setwd(dir)
#load sau and sqd volumes
V_sau <- read.csv("out/forecast_sau/for_V_sau.csv")
V_sqd <- read.csv("out/forecast_sqd/for_V_sqd.csv")
V_total <- V_sau[2:ncol(V_sau)] + V_sqd[2:ncol(V_sqd)]
#load sau and sqd balances
sqd_balance <- read.csv("out/calculated_sqd.csv")
sau_balance <- read.csv("out/calculated_sau.csv")
ter_balance_V <- sqd_balance$V + sau_balance$V
#current balance for the actual dates
sqd_balance_actual <- read.csv("in/water_balance_sqd_actual.csv")
sau_balance_actual <- read.csv("in/water_balance_sau_actual.csv")
ter_balance_actual_V <- sqd_balance_actual$V+sau_balance_actual$V
pdf("plot/3_forecast_ter.pdf")
#plot corrected volumes
plot(as.Date(V_sau$date), V_total[,1], type="l",
ylim=c(0,unique(sqd_balance$Vmax+sau_balance$Vmax)),  ylab="Volume Ter (hm³)", xlab="Date")
for (i in 2:51){
lines(as.Date(V_sau$date), V_total[,i])
}
#ensemble mean
lines(as.Date(V_sau$date), rowMeans(V_total), col="red", lwd=3)
#real dynamic previous year
dates_plot <- seq(as.Date("2023-10-01"), as.Date("2024-04-30"), by=1)
sel_pos <- as.Date(sqd_balance$date) %in% dates_plot
#plot(sqd_balance$date[sel_pos],sqd_balance$V[sel_pos], type="l")
lines(as.Date(V_sau$date),ter_balance_V[sel_pos][1:length(V_sau$date)],
col="blue", lwd=3)
lines(as.Date(sau_balance_actual$date, format = "%m/%d/%Y"),ter_balance_actual_V,
col="green", lwd=3)
legend("topleft", legend=c("Ensemble", "Last season", "51 members", "Actual season"),
col=c("red","blue", "black","green"), lty=1, cex=0.8, bty="n")
dev.off()
png("plot/3_forecast_ter.png", width = 800, height = 600, units = "px")
#plot corrected volumes
plot(as.Date(V_sau$date), V_total[,1], type="l",
ylim=c(0,unique(sqd_balance$Vmax+sau_balance$Vmax)),  ylab="Volume Ter (hm³)", xlab="Date")
for (i in 2:51){
lines(as.Date(V_sau$date), V_total[,i])
}
#ensemble mean
lines(as.Date(V_sau$date), rowMeans(V_total), col="red", lwd=3)
#real dynamic previous year
dates_plot <- seq(as.Date("2023-10-01"), as.Date("2024-04-30"), by=1)
sel_pos <- as.Date(sqd_balance$date) %in% dates_plot
#plot(sqd_balance$date[sel_pos],sqd_balance$V[sel_pos], type="l")
lines(as.Date(V_sau$date),ter_balance_V[sel_pos][1:length(V_sau$date)],
col="blue", lwd=3)
lines(as.Date(sau_balance_actual$date, format = "%m/%d/%Y"),ter_balance_actual_V,
col="green", lwd=3)
legend("topleft", legend=c("Ensemble", "Last season", "51 members", "Actual season"),
col=c("red","blue", "black","green"), lty=1, cex=0.8, bty="n")
dev.off()
sau_balance <- read.csv("out/calculated_sau.csv")
sau_balance$date <- as.Date(sau_balance$date)
#select previous season
dates_previous <- seq(as.Date("2023-10-01"), as.Date("2024-04-30"), by=1)
sel_pos <- sau_balance$date %in% dates_previous
pseas <- sau_balance[sel_pos,]
op<- par(mfrow=c(2,1), mar=c(3,4,1,2)+.1)
plot(pseas$date, pseas$V, type="l", col="black", lwd=3)
plot(pseas$date, pseas$Qin_calc, col="blue", type="l")
lines(pseas$date, pseas$Qout_calc, col="red")
#ACTUAL
sau_balance <- read.csv("in/water_balance_sau_actual.csv")
sau_balance$date <- as.Date(sau_balance$date)
#select previous season
#dates_previous <- seq(as.Date("2023-10-01"), as.Date("2024-04-30"), by=1)
#sel_pos <- sau_balance$date %in% dates_previous
pseas <- sau_balance
op<- par(mfrow=c(2,1), mar=c(3,4,1,2)+.1)
plot(pseas$date, pseas$V, type="l", col="black", lwd=3)
plot(pseas$date, pseas$Qin_calc, col="blue", type="l")
as.Date(sau_balance$date)
library(dplyr)
sau_balance <- read.csv("out/calculated_sau.csv")
sau_balance$date <- as.Date(sau_balance$date, format = "%m/%d/%Y")
#ACTUAL
sau_balance <- read.csv("in/water_balance_sau_actual.csv")
sau_balance$date <- as.Date(sau_balance$date, , format = "%m/%d/%Y")
#select previous season
#dates_previous <- seq(as.Date("2023-10-01"), as.Date("2024-04-30"), by=1)
#sel_pos <- sau_balance$date %in% dates_previous
pseas <- sau_balance
op<- par(mfrow=c(2,1), mar=c(3,4,1,2)+.1)
plot(pseas$date, pseas$V, type="l", col="black", lwd=3)
plot(pseas$date, pseas$Qin_calc, col="blue", type="l")
lines(pseas$date, pseas$Qout_calc, col="red")
op<- par(mfrow=c(2,1), mar=c(3,4,1,2)+.1)
plot(pseas$date, pseas$V, type="l", col="black", lwd=3)
plot(pseas$date, pseas$Qin_calc, col="blue", type="l")
lines(pseas$date, pseas$Qout_calc, col="red")
op<- par(mfrow=c(2,1), mar=c(3,4,1,2)+.1)
plot(pseas$date, pseas$V, type="l", col="black", lwd=3)
plot(pseas$date, pseas$Qin, col="blue", type="l")
lines(pseas$date, pseas$Qout, col="red")
plot(pseas$date, pseas$V, type="l", col="black", lwd=3)
plot(pseas$date, pseas$Qin, col="blue", type="l", ylim=c(-10, 30))
lines(pseas$date, pseas$Qout, col="red")
op<- par(mfrow=c(2,1), mar=c(3,4,1,2)+.1)
plot(pseas$date, pseas$V, type="l", col="black", lwd=3)
plot(pseas$date, pseas$Qin, col="blue", type="l", ylim=c(-1, 30))
lines(pseas$date, pseas$Qout, col="red")
library(dplyr)
sau_balance <- read.csv("out/calculated_sau.csv")
sau_balance$date <- as.Date(sau_balance$date)
#select previous season
dates_previous <- seq(as.Date("2023-10-01"), as.Date("2024-04-30"), by=1)
sel_pos <- sau_balance$date %in% dates_previous
pseas <- sau_balance[sel_pos,]
op<- par(mfrow=c(2,1), mar=c(3,4,1,2)+.1)
plot(pseas$date, pseas$V, type="l", col="black", lwd=3)
plot(pseas$date, pseas$Qin_calc, col="blue", type="l")
lines(pseas$date, pseas$Qout_calc, col="red")
plot(pseas$date, pseas$V, type="l", col="black", lwd=3, ylim = c(0,10))
plot(pseas$date, pseas$Qin_calc, col="blue", type="l")
lines(pseas$date, pseas$Qout_calc, col="red")
plot(pseas$date, pseas$V, type="l", col="black", lwd=3)
plot(pseas$date, pseas$Qin_calc, col="blue", type="l", ylim = c(0,10))
lines(pseas$date, pseas$Qout_calc, col="red")
#ACTUAL
sau_balance <- read.csv("in/water_balance_sau_actual.csv")
sau_balance$date <- as.Date(sau_balance$date, , format = "%m/%d/%Y")
#select previous season
#dates_previous <- seq(as.Date("2023-10-01"), as.Date("2024-04-30"), by=1)
#sel_pos <- sau_balance$date %in% dates_previous
pseas <- sau_balance
op<- par(mfrow=c(2,1), mar=c(3,4,1,2)+.1)
plot(pseas$date, pseas$V, type="l", col="black", lwd=3)
plot(pseas$date, pseas$Qin, col="blue", type="l", ylim=c(-1, 30))
lines(pseas$date, pseas$Qout, col="red")
pdf("plot/3_Qin_Qout_past.pdf")
op<- par(mfrow=c(2,1), mar=c(3,4,1,2)+.1)
plot(pseas$date, pseas$V, type="l", col="black", lwd=3)
plot(pseas$date, pseas$Qin_calc, col="blue", type="l", ylim = c(0,10))
lines(pseas$date, pseas$Qout_calc, col="red")
dev.off()
#ACTUAL
sau_balance <- read.csv("in/water_balance_sau_actual.csv")
sau_balance$date <- as.Date(sau_balance$date, , format = "%m/%d/%Y")
#select previous season
#dates_previous <- seq(as.Date("2023-10-01"), as.Date("2024-04-30"), by=1)
#sel_pos <- sau_balance$date %in% dates_previous
pseas <- sau_balance
pdf("plot/3_Qin_Qout_present.pdf")
op<- par(mfrow=c(2,1), mar=c(3,4,1,2)+.1)
plot(pseas$date, pseas$V, type="l", col="black", lwd=3)
plot(pseas$date, pseas$Qin, col="blue", type="l", ylim=c(-1, 30))
lines(pseas$date, pseas$Qout, col="red")
dev.off()
library(dplyr)
sau_balance <- read.csv("out/calculated_sau.csv")
sau_balance$date <- as.Date(sau_balance$date)
#select previous season
dates_previous <- seq(as.Date("2023-10-01"), as.Date("2024-04-30"), by=1)
sel_pos <- sau_balance$date %in% dates_previous
pseas <- sau_balance[sel_pos,]
pdf("plot/3_Qin_Qout_past.pdf")
op<- par(mfrow=c(2,1), mar=c(3,4,1,2)+.1)
plot(pseas$date, pseas$V, type="l", col="black", lwd=3)
plot(pseas$date, pseas$Qin_calc, col="blue", type="l", ylim = c(0,10))
lines(pseas$date, pseas$Qout_calc, col="red")
dev.off()
library(dplyr)
sau_balance <- read.csv("out/calculated_sau.csv")
sau_balance$date <- as.Date(sau_balance$date)
#select previous season
dates_previous <- seq(as.Date("2023-10-01"), as.Date("2024-04-30"), by=1)
sel_pos <- sau_balance$date %in% dates_previous
pseas <- sau_balance[sel_pos,]
pdf("plot/3_Qin_Qout_past.pdf")
op<- par(mfrow=c(2,1), mar=c(3,4,1,2)+.1)
plot(pseas$date, pseas$V, type="l", col="black", lwd=3)
plot(pseas$date, pseas$Qin_calc, col="blue", type="l", ylim = c(0,25))
lines(pseas$date, pseas$Qout_calc, col="red")
dev.off()
# Calculate the 5-day moving average (eman)
pseas$Qout5 <- zoo::rollmean(pseas$Qout, k = 5, align = "right", fill = NA)
pseas$Qin5 <- zoo::rollmean(pseas$Qin, k = 5, align = "right", fill = NA)
indices <- seq(5, nrow(pseas), by = 5)  # Indices for every 5th day
lines(pseas$date[indices], pseas$Qout5[indices], col = "violet", pch = 19, cex = 1)
lines(pseas$date[indices], pseas$Qin5[indices], col = "green", pch = 19, cex = 1)
#try using 5-days moving average of the 7 days in advance forecasted
pseas <- pseas %>%
mutate(Qin_shifted = dplyr::lead(Qin, n = 6),  # Shift Qin forward by 6 days
Q5d7a = zoo::rollmean(Qin_shifted, k = 5, align = "left", fill = NA)) %>%
dplyr::select(-Qin_shifted)  # Remove the intermediate shifted column
lines(pseas$date, pseas$Q5d7a, type = "l", col = "black", lty = 2)
plot(pseas$Qin, pseas$Qout)
#ACTUAL
sau_balance <- read.csv("in/water_balance_sau_actual.csv")
sau_balance$date <- as.Date(sau_balance$date, , format = "%m/%d/%Y")
#select previous season
#dates_previous <- seq(as.Date("2023-10-01"), as.Date("2024-04-30"), by=1)
#sel_pos <- sau_balance$date %in% dates_previous
pseas <- sau_balance
pdf("plot/3_Qin_Qout_present.pdf")
op<- par(mfrow=c(2,1), mar=c(3,4,1,2)+.1)
plot(pseas$date, pseas$V, type="l", col="black", lwd=3, ylim=c(0,25))
plot(pseas$date, pseas$Qin, col="blue", type="l", ylim=c(-1, 30))
lines(pseas$date, pseas$Qout, col="red")
dev.off()
# Calculate the 5-day moving average (eman)
pseas$Qout5 <- zoo::rollmean(pseas$Qout, k = 5, align = "right", fill = NA)
pseas$Qin5 <- zoo::rollmean(pseas$Qin, k = 5, align = "right", fill = NA)
indices <- seq(5, nrow(pseas), by = 5)  # Indices for every 5th day
lines(pseas$date[indices], pseas$Qout5[indices], col = "violet", pch = 19, cex = 1)
lines(pseas$date[indices], pseas$Qin5[indices], col = "green", pch = 19, cex = 1)
#try using 5-days moving average of the 7 days in advance forecasted
pseas <- pseas %>%
mutate(Qin_shifted = dplyr::lead(Qin, n = 6),  # Shift Qin forward by 6 days
Q5d7a = zoo::rollmean(Qin_shifted, k = 5, align = "left", fill = NA)) %>%
dplyr::select(-Qin_shifted)  # Remove the intermediate shifted column
lines(pseas$date, pseas$Q5d7a, type = "l", col = "black", lty = 2)
plot(pseas$Qin, pseas$Qout)
#ACTUAL
sau_balance <- read.csv("in/water_balance_sau_actual.csv")
sau_balance$date <- as.Date(sau_balance$date, , format = "%m/%d/%Y")
#select previous season
#dates_previous <- seq(as.Date("2023-10-01"), as.Date("2024-04-30"), by=1)
#sel_pos <- sau_balance$date %in% dates_previous
pseas <- sau_balance
pdf("plot/3_Qin_Qout_present.pdf")
op<- par(mfrow=c(2,1), mar=c(3,4,1,2)+.1)
plot(pseas$date, pseas$V, type="l", col="black", lwd=3)
plot(pseas$date, pseas$Qin, col="blue", type="l", ylim=c(-1, 30), ylim=c(0,25))
#ACTUAL
sau_balance <- read.csv("in/water_balance_sau_actual.csv")
sau_balance$date <- as.Date(sau_balance$date, , format = "%m/%d/%Y")
#select previous season
#dates_previous <- seq(as.Date("2023-10-01"), as.Date("2024-04-30"), by=1)
#sel_pos <- sau_balance$date %in% dates_previous
pseas <- sau_balance
pdf("plot/3_Qin_Qout_present.pdf")
op<- par(mfrow=c(2,1), mar=c(3,4,1,2)+.1)
plot(pseas$date, pseas$V, type="l", col="black", lwd=3)
plot(pseas$date, pseas$Qin, col="blue", type="l", ylim=c(0, 30))
lines(pseas$date, pseas$Qout, col="red")
dev.off()
# Calculate the 5-day moving average (eman)
pseas$Qout5 <- zoo::rollmean(pseas$Qout, k = 5, align = "right", fill = NA)
pseas$Qin5 <- zoo::rollmean(pseas$Qin, k = 5, align = "right", fill = NA)
indices <- seq(5, nrow(pseas), by = 5)  # Indices for every 5th day
lines(pseas$date[indices], pseas$Qout5[indices], col = "violet", pch = 19, cex = 1)
lines(pseas$date[indices], pseas$Qin5[indices], col = "green", pch = 19, cex = 1)
#try using 5-days moving average of the 7 days in advance forecasted
pseas <- pseas %>%
mutate(Qin_shifted = dplyr::lead(Qin, n = 6),  # Shift Qin forward by 6 days
Q5d7a = zoo::rollmean(Qin_shifted, k = 5, align = "left", fill = NA)) %>%
dplyr::select(-Qin_shifted)  # Remove the intermediate shifted column
lines(pseas$date, pseas$Q5d7a, type = "l", col = "black", lty = 2)
plot(pseas$Qin, pseas$Qout)
