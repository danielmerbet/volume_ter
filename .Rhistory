source(paste0(dir,code2)) #to avoid modifying things 4 times everytime we change something in the plot
dev.off()
pdf(paste0("plot/3_forecast_ter_",year_initial,"_",month_initial,".pdf"))
code2 <- "Plotting_ter_forecast.R"
source(paste0(dir,code2)) #to avoid modifying things 4 times everytime we change something in the plot
dev.off()
pdf(paste0("plot/3_forecast_ter_",year_initial,"_",month_initial,".pdf"))
code2 <- "Plotting_ter_forecast.R"
source(paste0(dir,code2)) #to avoid modifying things 4 times everytime we change something in the plot
dev.off()
pdf(paste0("plot/3_forecast_ter_",year_initial,"_",month_initial,".pdf"))
code2 <- "Plotting_ter_forecast.R"
source(paste0(dir,code2)) #to avoid modifying things 4 times everytime we change something in the plot
dev.off()
pdf(paste0("plot/3_forecast_ter_",year_initial,"_",month_initial,".pdf"))
code2 <- "Plotting_ter_forecast.R"
source(paste0(dir,code2)) #to avoid modifying things 4 times everytime we change something in the plot
dev.off()
pdf(paste0("plot/3_forecast_ter_",year_initial,"_",month_initial,".pdf"),width=10)
code2 <- "Plotting_ter_forecast.R"
source(paste0(dir,code2)) #to avoid modifying things 4 times everytime we change something in the plot
dev.off()
pdf(paste0("plot/3_forecast_ter_",year_initial,"_",month_initial,".pdf"),width=7)
code2 <- "Plotting_ter_forecast.R"
source(paste0(dir,code2)) #to avoid modifying things 4 times everytime we change something in the plot
dev.off()
pdf(paste0("plot/3_forecast_ter_",year_initial,"_",month_initial,".pdf"),width=8)
code2 <- "Plotting_ter_forecast.R"
source(paste0(dir,code2)) #to avoid modifying things 4 times everytime we change something in the plot
dev.off()
pdf(paste0("plot/3_forecast_ter_",year_initial,"_",month_initial,".pdf"),width=8)
code2 <- "Plotting_ter_forecast.R"
source(paste0(dir,code2)) #to avoid modifying things 4 times everytime we change something in the plot
dev.off()
pdf(paste0("plot/3_forecast_ter_",year_initial,"_",month_initial,".pdf"),width=8)
code2 <- "Plotting_ter_forecast.R"
source(paste0(dir,code2)) #to avoid modifying things 4 times everytime we change something in the plot
dev.off()
pdf(paste0("plot/3_forecast_ter_",year_initial,"_",month_initial,".pdf"),width=8)
code2 <- "Plotting_ter_forecast.R"
source(paste0(dir,code2)) #to avoid modifying things 4 times everytime we change something in the plot
dev.off()
png(paste0("plot/3_forecast_ter_",year_initial,"_",month_initial,".png"), width = 800, height = 600, units = "px")
code2 <- "Plotting_ter_forecast.R"
source(paste0(dir,code2))
dev.off()
png(paste0("plot/3_forecast_ter_",year_initial,"_",month_initial,".png"), width = 600, height = 600, units = "px")
code2 <- "Plotting_ter_forecast.R"
source(paste0(dir,code2))
dev.off()
png(paste0("plot/3_forecast_ter_",year_initial,"_",month_initial,".png"), width = 700, height = 600, units = "px")
code2 <- "Plotting_ter_forecast.R"
source(paste0(dir,code2))
dev.off()
new_obs <- read.csv("in/dades_ACA_marc_2025.csv")
View(new_obs)
new_obs$date
new_obs <- read.csv("in/dades_ACA_marc_2025.csv")
new_obs$date <- mdy(new_obs$date)
new_obs$date
#This is just to add observations to the 2025 plot. Not for including in the workflow
pdf("plot/3_forecast_ter_for_2025.pdf",width=8)
par(mar=c(4.1, 4.1, 4.1, 8))
plot(as.Date(V_sau$date), V_total[,1], type="l",
ylim=c(0,unique(sqd_balance$Vmax+sau_balance$Vmax)),
ylab="Volume Sau+Susqueda (hm³)", xlab="", col="lightgrey",
main=paste0("Predicció inicialitzada el ",date_ini))
for (i in 2:51){
lines(as.Date(V_sau$date), V_total[,i], col="lightgrey")
}
# Ensemble percentiles
# 0.90 and 0.10 percentiles
upper_90 <- apply(V_total, 1, quantile, 0.90)
lower_10 <- apply(V_total, 1, quantile, 0.1)
# Plot the shaded area between 0.90 and 0.10 percentiles with transparency
polygon(c(as.Date(V_sau$date), rev(as.Date(V_sau$date))),
c(upper_90, rev(lower_10)),
col=rgb(0, 0, 1, 0.2), border=NA)  # Red with transparency
# 0.75 and 0.25 percentiles
upper_75 <- apply(V_total, 1, quantile, 0.75)
lower_25 <- apply(V_total, 1, quantile, 0.25)
# Plot the shaded area between 0.75 and 0.25 percentiles with transparency
polygon(c(as.Date(V_sau$date), rev(as.Date(V_sau$date))),
c(upper_75, rev(lower_25)),
col=rgb(0, 0, 0.6, 0.3), border=NA)  # Dark red with transparency
# Plot the ensemble median
lines(as.Date(V_sau$date), apply(V_total, 1, median), col="blue", lwd=3)
#real dynamic previous year
dates_plot <- dates_previous
sel_pos <- as.Date(sqd_balance$date) %in% dates_plot
#plot(sqd_balance$date[sel_pos],sqd_balance$V[sel_pos], type="l")
lines(as.Date(V_sau$date),ter_balance_V[sel_pos][1:length(V_sau$date)],
col="black", lwd=1.5)
lines(as.Date(sau_balance_actual$date, format = "%m/%d/%Y"),ter_balance_actual_V,
col="green", lwd=3)
#limits d'alertes
abline(200,0,lty=3)
text(all_dates[215]+7, 200, "Prealerta",xpd=NA,pos = 4,cex=0.8)
outflows_ALERTA <- c(120,140,160,160,160,160,160,140,120,120,120,120)#first in Jan
outflows_ALERTA_daily <- data.frame(date = all_dates) %>%
mutate(month_alerta = as.numeric(format(date, "%m"))) %>%
mutate(value = outflows_ALERTA[.data$month_alerta]) %>%
arrange(date)
lines(outflows_ALERTA_daily$date, outflows_ALERTA_daily$value,col="yellow",lty=3,lwd=2)
text(all_dates[215]+7, outflows_ALERTA_daily$value[length(outflows_ALERTA_daily$value)], "Alerta",
xpd=NA,pos = 4,cex=0.8)
lines(outflows_ALERTA_daily$date, outflows_ALERTA_daily$value+20,col="yellow",lty=3,lwd=1)
text(all_dates[215]+7, outflows_ALERTA_daily$value[length(outflows_ALERTA_daily$value)]+20,
"Sortida Alerta",xpd=NA,pos = 4,cex=0.8)
abline(98,0,lty=3,col="darkorange",lwd=1)
text(all_dates[215]+7, 98, "Sortida Excep.",xpd=NA,pos = 4,cex=0.8)
abline(85,0,lty=3,col="darkorange",lwd=2)
text(all_dates[215]+7, 85, "Excepcionalitat",xpd=NA,pos = 4,cex=0.8)
abline(65,0,lty=3,col="red",lwd=2)
text(all_dates[215]+7, 65, "Emergència I",xpd=NA,pos = 4,cex=0.8)
abline(43,0,lty=3,col="red",lwd=2)
text(all_dates[215]+7, 43, "Emergència II",xpd=NA,pos = 4,cex=0.8)
abline(14,0,lty=3,col="red",lwd=2)
text(all_dates[215]+7, 14, "Emergència III",xpd=NA,pos = 4,cex=0.8)
legend(all_dates[215]+7,unique(sqd_balance$Vmax+sau_balance$Vmax), legend=c("51 members", "Ensemble median",  "Observations" ,"Previous season"),
col=c("lightgrey","blue", "green","black"), lty=1, cex=0.8, bty="n",xpd=NA,lwd=1.5)
text(all_dates[215]+7, unique(sqd_balance$Vmax+sau_balance$Vmax)-75, "Area fosca = 50% prob.\nArea clara = 80% prob.",xpd=NA,pos = 4,cex=0.8)
new_obs <- read.csv("in/dades_ACA_marc_2025.csv")
new_obs$date <- mdy(new_obs$date)
lines(new_obs$date, new_obs$volume, col="green", lwd=3)
dev.off()
#dir <- "~/Documents/intoDBP/volume_ter/"
dir <- "/home/rmarce/volume_ter/"
setwd(dir)
#####MANDATORY FIELDS TO CHANGE###############
year_initial <- 2023
month_initial <- "3" #"01":january, "03":march, "11":november etc...
#outflow option: 1 or 2 or 3
# 1 is the median value of the last x days
# 2 the same as previous season (IT COULD HAVE ERRORS if it was too different than current season)
# 3 outflows from approved volumes in the report of the Comissio de desembassament
out_option <- 3
#if (out_option==1){ #RAFA: to control this in a different way at Sau and Susqueda
x_days <- 10
#}
################OPTIONAL######################
plot_actual <- TRUE #plot current season (if there is data available)
#Recommend NOT to change if you do not want to change the default plots in GitHUB README.md
fix_plot <- FALSE #to set as default plots and csv outputs - RAFA: I do not see this implemented, would do things twice
#TRUE only for 2024-10 initialization
bias_corrected <- FALSE #whether to use bias corrected data or not
#Run 1_calculated_balance.R
#the input data must be update first to be able to run:
#in/water_balance_sau.csv
#in/water_balance_sqd.csv
code1 <- "1_calculated_balance.R"
system(paste0("Rscript ", dir,code1))
#Modify and run 2_river.R
code2 <- "2_river.R"
file_read <- readLines(code2)
file_read[8]  <- paste0("dir <- \"", dir, "\"")
file_read[10] <- paste0("year_initial <- ", year_initial)
file_read[11] <- paste0("month_initial <- \"",month_initial,"\"")
file_read[14] <- paste0("fix_plot <- ", fix_plot, " #to set as default plots and csv outputs")
file_read[15] <- paste0("bias_corrected <- ", bias_corrected," #whether to use bias corrected data or not (only for 2024-10 intialization")
writeLines(file_read, con=code2)
system(paste0("Rscript ", dir,code2))
#dir <- "~/Documents/intoDBP/volume_ter/"
dir <- "/home/rmarce/volume_ter/"
setwd(dir)
#####MANDATORY FIELDS TO CHANGE###############
year_initial <- 2023
month_initial <- "3" #"01":january, "03":march, "11":november etc...
#outflow option: 1 or 2 or 3
# 1 is the median value of the last x days
# 2 the same as previous season (IT COULD HAVE ERRORS if it was too different than current season)
# 3 outflows from approved volumes in the report of the Comissio de desembassament
out_option <- 3
#if (out_option==1){ #RAFA: to control this in a different way at Sau and Susqueda
x_days <- 10
#}
################OPTIONAL######################
plot_actual <- TRUE #plot current season (if there is data available)
#Recommend NOT to change if you do not want to change the default plots in GitHUB README.md
fix_plot <- FALSE #to set as default plots and csv outputs - RAFA: I do not see this implemented, would do things twice
#TRUE only for 2024-10 initialization
bias_corrected <- FALSE #whether to use bias corrected data or not
#Run 1_calculated_balance.R
#the input data must be update first to be able to run:
#in/water_balance_sau.csv
#in/water_balance_sqd.csv
code1 <- "1_calculated_balance.R"
system(paste0("Rscript ", dir,code1))
#Modify and run 2_river.R
code2 <- "2_river.R"
file_read <- readLines(code2)
file_read[8]  <- paste0("dir <- \"", dir, "\"")
file_read[10] <- paste0("year_initial <- ", year_initial)
file_read[11] <- paste0("month_initial <- \"",month_initial,"\"")
file_read[14] <- paste0("fix_plot <- ", fix_plot, " #to set as default plots and csv outputs")
file_read[15] <- paste0("bias_corrected <- ", bias_corrected," #whether to use bias corrected data or not (only for 2024-10 intialization")
writeLines(file_read, con=code2)
system(paste0("Rscript ", dir,code2))
library(lubridate); library(airGR)
dir <- "/home/rmarce/volume_ter/"
setwd(dir)
year_initial <- 2023
month_initial <- "3"
date_ini <- as.Date(paste0(year_initial,"-",month_initial,"-01"))
all_dates <- seq(from=date_ini, by=1, len=215)
fix_plot <- FALSE #to set as default plots and csv outputs
bias_corrected <- FALSE #whether to use bias corrected data or not (only for 2024-10 intialization
years_fore <- unique(year(all_dates)) #2024:2025 #For System5 it could be a vector of two years, or one single year
years_rean <- (years_fore[1]-2):years_fore[1]# c(2022:2024) #For ERA5 (2 years spin up)
months <- unique(month(all_dates)) #c(10:12,1:4)
last_day <- day(all_dates[length(all_dates)]) #last day of the last month of the forecast, for instance for June is 30 or July is 31
members<-51
area <- 1802660000.000 #m²
date_ini <- as.Date(paste0(years_fore[1], "-", months[1], "-01"))
if (length(years_rean)>1){
if(length(years_fore)>1){
date_end <- as.Date(paste0(years_fore[2], "-", months[length(months)], "-", last_day))
}else{
date_end <- as.Date(paste0(years_fore[1], "-", months[length(months)], "-", last_day))
}
}else{
date_end <- as.Date(paste0(years_fore[1], "-", months[length(months)], "-", last_day))
}
spinup <- 2
date_ini_spinup <- as.Date(paste0(years_fore[1]-spinup, "-", months[1], "-01"))
dates_total <- seq(date_ini_spinup, date_end, by=1)
dates_total_forecast <- seq(date_ini, date_end, by=1)
dates_total_reanalysis <- seq(date_ini_spinup, date_ini-1, by=1)
##LOAD DATA
#load forecast
if(bias_corrected){
load("in/forecast.RData")
}else{
forecast_list <- list(tp=read.csv(paste0("in/tp_", month_initial,"_",year_initial,".csv")),
pev=read.csv(paste0("in/pet_", month_initial,"_",year_initial,".csv")))
}
bias_corrected
dir <- "/home/rmarce/volume_ter"
setwd(dir)
year_initial <- 2023
month_initial <- "3"
date_ini <- as.Date(paste0(year_initial,"-",month_initial,"-01"))
all_dates <- seq(from=date_ini, by=1, len=215)
fix_plot <- FALSE #to set as default plots and csv outputs
bias_corrected <- FALSE #whether to use bias corrected data or not (only for 2024-10 intialization
years_fore <- unique(year(all_dates)) #2024:2025 #For System5 it could be a vector of two years, or one single year
years_rean <- (years_fore[1]-2):years_fore[1]# c(2022:2024) #For ERA5 (2 years spin up)
months <- unique(month(all_dates)) #c(10:12,1:4)
last_day <- day(all_dates[length(all_dates)]) #last day of the last month of the forecast, for instance for June is 30 or July is 31
members<-51
area <- 1802660000.000 #m²
date_ini <- as.Date(paste0(years_fore[1], "-", months[1], "-01"))
if (length(years_rean)>1){
if(length(years_fore)>1){
date_end <- as.Date(paste0(years_fore[2], "-", months[length(months)], "-", last_day))
}else{
date_end <- as.Date(paste0(years_fore[1], "-", months[length(months)], "-", last_day))
}
}else{
date_end <- as.Date(paste0(years_fore[1], "-", months[length(months)], "-", last_day))
}
spinup <- 2
date_ini_spinup <- as.Date(paste0(years_fore[1]-spinup, "-", months[1], "-01"))
dates_total <- seq(date_ini_spinup, date_end, by=1)
dates_total_forecast <- seq(date_ini, date_end, by=1)
dates_total_reanalysis <- seq(date_ini_spinup, date_ini-1, by=1)
##LOAD DATA
#load forecast
if(bias_corrected){
load("in/forecast.RData")
}else{
forecast_list <- list(tp=read.csv(paste0("in/tp_", month_initial,"_",year_initial,".csv")),
pev=read.csv(paste0("in/pet_", month_initial,"_",year_initial,".csv")))
}
setwd(dir)
wd
setwd
#dir <- "~/Documents/intoDBP/volume_ter/"
dir <- "/home/rmarce/volume_ter/"
setwd(dir)
#####MANDATORY FIELDS TO CHANGE###############
year_initial <- 2023
month_initial <- "03" #"01":january, "03":march, "11":november etc...
#outflow option: 1 or 2 or 3
# 1 is the median value of the last x days
# 2 the same as previous season (IT COULD HAVE ERRORS if it was too different than current season)
# 3 outflows from approved volumes in the report of the Comissio de desembassament
out_option <- 3
#if (out_option==1){ #RAFA: to control this in a different way at Sau and Susqueda
x_days <- 10
#}
################OPTIONAL######################
plot_actual <- TRUE #plot current season (if there is data available)
#Recommend NOT to change if you do not want to change the default plots in GitHUB README.md
fix_plot <- FALSE #to set as default plots and csv outputs - RAFA: I do not see this implemented, would do things twice
#TRUE only for 2024-10 initialization
bias_corrected <- FALSE #whether to use bias corrected data or not
#Run 1_calculated_balance.R
#the input data must be update first to be able to run:
#in/water_balance_sau.csv
#in/water_balance_sqd.csv
code1 <- "1_calculated_balance.R"
system(paste0("Rscript ", dir,code1))
#Modify and run 2_river.R
code2 <- "2_river.R"
file_read <- readLines(code2)
file_read[8]  <- paste0("dir <- \"", dir, "\"")
file_read[10] <- paste0("year_initial <- ", year_initial)
file_read[11] <- paste0("month_initial <- \"",month_initial,"\"")
file_read[14] <- paste0("fix_plot <- ", fix_plot, " #to set as default plots and csv outputs")
file_read[15] <- paste0("bias_corrected <- ", bias_corrected," #whether to use bias corrected data or not (only for 2024-10 intialization")
writeLines(file_read, con=code2)
system(paste0("Rscript ", dir,code2))
#Modify and run 3_forecast_balance_sau.R
code3 <- "3_forecast_balance_sau.R"
file_read <- readLines(code3)
file_read[8]  <- paste0("dir <- \"", dir, "\"")
file_read[11] <- paste0("year_initial <- ", year_initial)
file_read[12] <- paste0("month_initial <- \"",month_initial,"\"")
file_read[14] <- paste0("fix_plot <- ", fix_plot, " #to set as default plots and csv outputs")
file_read[15] <- paste0("plot_actual <- ", plot_actual," #plot current season")
#For Sau we will make flow option always 1 for the moment
#file_read[17] <- paste0("out_option <- ", out_option," # 1: median last x days 2: same as last similar season")
#if (out_option==1){
file_read[39] <- paste0("  x_days <- ", x_days) #So we can control this without having outflow option 1 for Susqueda below
#}
writeLines(file_read, con=code3)
system(paste0("Rscript ", dir,code3))
#Modify and run 3_forecast_balance_sqd.R
code4 <- "3_forecast_balance_sqd.R"
file_read <- readLines(code4)
file_read[8]  <- paste0("dir <- \"", dir, "\"")
file_read[11] <- paste0("year_initial <- ", year_initial)
file_read[12] <- paste0("month_initial <- \"",month_initial,"\"")
file_read[14] <- paste0("fix_plot <- ", fix_plot, " #to set as default plots and csv outputs")
file_read[15] <- paste0("plot_actual <- ", plot_actual," #plot current season")
file_read[17] <- paste0("out_option <- ", out_option," # 1: median last x days 2: same as last similar season 3: from Comissio de desembassament")
if (out_option==1){
file_read[39] <- paste0("  x_days <- ", x_days)
}
writeLines(file_read, con=code4)
system(paste0("Rscript ", dir,code4))
#Modify and run 3_forecast_balance_ter.R
code5 <- "3_forecast_balance_ter.R"
file_read <- readLines(code5)
file_read[8]  <- paste0("dir <- \"", dir, "\"")
file_read[11] <- paste0("year_initial <- ", year_initial)
file_read[12] <- paste0("month_initial <- \"",month_initial,"\"")
file_read[14] <- paste0("fix_plot <- ", fix_plot, " #to set as default plots and csv outputs")
file_read[15] <- paste0("plot_actual <- ", plot_actual," #plot current season")
writeLines(file_read, con=code5)
system(paste0("Rscript ", dir,code5))
#Modify and run 3_forecast_balance_ter.R
code5 <- "3_forecast_balance_ter.R"
file_read <- readLines(code5)
file_read[8]  <- paste0("dir <- \"", dir, "\"")
file_read[11] <- paste0("year_initial <- ", year_initial)
file_read[12] <- paste0("month_initial <- \"",month_initial,"\"")
file_read[14] <- paste0("fix_plot <- ", fix_plot, " #to set as default plots and csv outputs")
file_read[15] <- paste0("plot_actual <- ", plot_actual," #plot current season")
writeLines(file_read, con=code5)
system(paste0("Rscript ", dir,code5))
#dir <- "~/Documents/intoDBP/volume_ter/"
dir <- "/home/rmarce/volume_ter/"
setwd(dir)
#####MANDATORY FIELDS TO CHANGE###############
year_initial <- 2023
month_initial <- "11" #"01":january, "03":march, "11":november etc...
#outflow option: 1 or 2 or 3
# 1 is the median value of the last x days
# 2 the same as previous season (IT COULD HAVE ERRORS if it was too different than current season)
# 3 outflows from approved volumes in the report of the Comissio de desembassament
out_option <- 3
#if (out_option==1){ #RAFA: to control this in a different way at Sau and Susqueda
x_days <- 10
#}
################OPTIONAL######################
plot_actual <- TRUE #plot current season (if there is data available)
#Recommend NOT to change if you do not want to change the default plots in GitHUB README.md
fix_plot <- FALSE #to set as default plots and csv outputs - RAFA: I do not see this implemented, would do things twice
#TRUE only for 2024-10 initialization
bias_corrected <- FALSE #whether to use bias corrected data or not
#Run 1_calculated_balance.R
#the input data must be update first to be able to run:
#in/water_balance_sau.csv
#in/water_balance_sqd.csv
code1 <- "1_calculated_balance.R"
system(paste0("Rscript ", dir,code1))
#Modify and run 2_river.R
code2 <- "2_river.R"
file_read <- readLines(code2)
file_read[8]  <- paste0("dir <- \"", dir, "\"")
file_read[10] <- paste0("year_initial <- ", year_initial)
file_read[11] <- paste0("month_initial <- \"",month_initial,"\"")
file_read[14] <- paste0("fix_plot <- ", fix_plot, " #to set as default plots and csv outputs")
file_read[15] <- paste0("bias_corrected <- ", bias_corrected," #whether to use bias corrected data or not (only for 2024-10 intialization")
writeLines(file_read, con=code2)
system(paste0("Rscript ", dir,code2))
#Modify and run 3_forecast_balance_sau.R
code3 <- "3_forecast_balance_sau.R"
file_read <- readLines(code3)
file_read[8]  <- paste0("dir <- \"", dir, "\"")
file_read[11] <- paste0("year_initial <- ", year_initial)
file_read[12] <- paste0("month_initial <- \"",month_initial,"\"")
file_read[14] <- paste0("fix_plot <- ", fix_plot, " #to set as default plots and csv outputs")
file_read[15] <- paste0("plot_actual <- ", plot_actual," #plot current season")
#For Sau we will make flow option always 1 for the moment
#file_read[17] <- paste0("out_option <- ", out_option," # 1: median last x days 2: same as last similar season")
#if (out_option==1){
file_read[39] <- paste0("  x_days <- ", x_days) #So we can control this without having outflow option 1 for Susqueda below
#}
writeLines(file_read, con=code3)
system(paste0("Rscript ", dir,code3))
#Modify and run 3_forecast_balance_sqd.R
code4 <- "3_forecast_balance_sqd.R"
file_read <- readLines(code4)
file_read[8]  <- paste0("dir <- \"", dir, "\"")
file_read[11] <- paste0("year_initial <- ", year_initial)
file_read[12] <- paste0("month_initial <- \"",month_initial,"\"")
file_read[14] <- paste0("fix_plot <- ", fix_plot, " #to set as default plots and csv outputs")
file_read[15] <- paste0("plot_actual <- ", plot_actual," #plot current season")
file_read[17] <- paste0("out_option <- ", out_option," # 1: median last x days 2: same as last similar season 3: from Comissio de desembassament")
if (out_option==1){
file_read[39] <- paste0("  x_days <- ", x_days)
}
writeLines(file_read, con=code4)
system(paste0("Rscript ", dir,code4))
#Modify and run 3_forecast_balance_ter.R
code5 <- "3_forecast_balance_ter.R"
file_read <- readLines(code5)
file_read[8]  <- paste0("dir <- \"", dir, "\"")
file_read[11] <- paste0("year_initial <- ", year_initial)
file_read[12] <- paste0("month_initial <- \"",month_initial,"\"")
file_read[14] <- paste0("fix_plot <- ", fix_plot, " #to set as default plots and csv outputs")
file_read[15] <- paste0("plot_actual <- ", plot_actual," #plot current season")
writeLines(file_read, con=code5)
system(paste0("Rscript ", dir,code5))
#dir <- "~/Documents/intoDBP/volume_ter/"
dir <- "/home/rmarce/volume_ter/"
setwd(dir)
#####MANDATORY FIELDS TO CHANGE###############
year_initial <- 2024
month_initial <- "04" #"01":january, "03":march, "11":november etc...
#outflow option: 1 or 2 or 3
# 1 is the median value of the last x days
# 2 the same as previous season (IT COULD HAVE ERRORS if it was too different than current season)
# 3 outflows from approved volumes in the report of the Comissio de desembassament
out_option <- 3
#if (out_option==1){ #RAFA: to control this in a different way at Sau and Susqueda
x_days <- 10
#}
################OPTIONAL######################
plot_actual <- TRUE #plot current season (if there is data available)
#Recommend NOT to change if you do not want to change the default plots in GitHUB README.md
fix_plot <- FALSE #to set as default plots and csv outputs - RAFA: I do not see this implemented, would do things twice
#TRUE only for 2024-10 initialization
bias_corrected <- FALSE #whether to use bias corrected data or not
#Run 1_calculated_balance.R
#the input data must be update first to be able to run:
#in/water_balance_sau.csv
#in/water_balance_sqd.csv
code1 <- "1_calculated_balance.R"
system(paste0("Rscript ", dir,code1))
#Modify and run 2_river.R
code2 <- "2_river.R"
file_read <- readLines(code2)
file_read[8]  <- paste0("dir <- \"", dir, "\"")
file_read[10] <- paste0("year_initial <- ", year_initial)
file_read[11] <- paste0("month_initial <- \"",month_initial,"\"")
file_read[14] <- paste0("fix_plot <- ", fix_plot, " #to set as default plots and csv outputs")
file_read[15] <- paste0("bias_corrected <- ", bias_corrected," #whether to use bias corrected data or not (only for 2024-10 intialization")
writeLines(file_read, con=code2)
system(paste0("Rscript ", dir,code2))
#Modify and run 3_forecast_balance_sau.R
code3 <- "3_forecast_balance_sau.R"
file_read <- readLines(code3)
file_read[8]  <- paste0("dir <- \"", dir, "\"")
file_read[11] <- paste0("year_initial <- ", year_initial)
file_read[12] <- paste0("month_initial <- \"",month_initial,"\"")
file_read[14] <- paste0("fix_plot <- ", fix_plot, " #to set as default plots and csv outputs")
file_read[15] <- paste0("plot_actual <- ", plot_actual," #plot current season")
#For Sau we will make flow option always 1 for the moment
#file_read[17] <- paste0("out_option <- ", out_option," # 1: median last x days 2: same as last similar season")
#if (out_option==1){
file_read[39] <- paste0("  x_days <- ", x_days) #So we can control this without having outflow option 1 for Susqueda below
#}
writeLines(file_read, con=code3)
system(paste0("Rscript ", dir,code3))
#Modify and run 3_forecast_balance_sqd.R
code4 <- "3_forecast_balance_sqd.R"
file_read <- readLines(code4)
file_read[8]  <- paste0("dir <- \"", dir, "\"")
file_read[11] <- paste0("year_initial <- ", year_initial)
file_read[12] <- paste0("month_initial <- \"",month_initial,"\"")
file_read[14] <- paste0("fix_plot <- ", fix_plot, " #to set as default plots and csv outputs")
file_read[15] <- paste0("plot_actual <- ", plot_actual," #plot current season")
file_read[17] <- paste0("out_option <- ", out_option," # 1: median last x days 2: same as last similar season 3: from Comissio de desembassament")
if (out_option==1){
file_read[39] <- paste0("  x_days <- ", x_days)
}
writeLines(file_read, con=code4)
system(paste0("Rscript ", dir,code4))
#Modify and run 3_forecast_balance_ter.R
code5 <- "3_forecast_balance_ter.R"
file_read <- readLines(code5)
file_read[8]  <- paste0("dir <- \"", dir, "\"")
file_read[11] <- paste0("year_initial <- ", year_initial)
file_read[12] <- paste0("month_initial <- \"",month_initial,"\"")
file_read[14] <- paste0("fix_plot <- ", fix_plot, " #to set as default plots and csv outputs")
file_read[15] <- paste0("plot_actual <- ", plot_actual," #plot current season")
writeLines(file_read, con=code5)
system(paste0("Rscript ", dir,code5))
